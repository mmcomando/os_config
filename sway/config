# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left n
set $down e
set $up i
set $right o
# set $screen_left HDMI-A-1
set $screen_right DP-1

# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | xargs swaymsg exec --


### Output configuration
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

input * {
    xkb_layout "pl"
    # xkb_variant "colemak"
}



### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    # bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+y exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace 10_tools
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace 10_tools
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+p layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 30px
    bindsym $down resize grow height 30px
    bindsym $up resize shrink height 30px
    bindsym $right resize grow width 30px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 30px
    bindsym Down resize grow height 30px
    bindsym Up resize shrink height 30px
    bindsym Right resize grow width 30px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
    status_command i3status-rs ~/os_config/sway/configuration.i3status

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}


#
# Monitors configuration:
#

    set $my_wallpaper_fhd  ~/os_config/wallpaper/1920x1200/crysis.jpg
    set $my_wallpaper_uw  ~/os_config/wallpaper/3440x1440/endgame.png

    # Show available outputs: swaymsg -t get_outputs
    # 1920x1200 monitor on left
    #output $screen_left pos 0 110
    # 3440x1440 monitor on middle
    # output $screen_right pos 1920 0

    output $screen_right background $my_wallpaper_uw fit
    #output $screen_left background $my_wallpaper_fhd center

#
# Startup programs:
#
   # exec swaymsg 'workspace 2; exec code'
   # exec swaymsg 'workspace 3; exec nvim-qt'
   # exec swaymsg 'workspace control; exec pavucontrol'
   # exec swaymsg 'workspace control; exec gnome-system-monitor'
   # exec /run/current-system/sw/libexec/polkit-gnome-authentication-agent-1

#
# Other:
#

    # Tablet Input
    # Compute region:
    # resolution: (3440x1440)
    # area wacom: (155x95mm) >$ libinput list-devices
    # -> 1440 * 152 / 3440 = x -> x / 95 = y (use 'y')
    # input "1386:965:Wacom_Intuos_BT_S_Pen" {
    #     map_to_output DP-1
    #     map_from_region 0.0x0.0 1.0x0.669
    # }

    # Open file manager
    bindsym $mod+d exec pcmanfm
    # Screenshot
    bindsym $mod+m exec grim -g "$(slurp)" -t png - | wl-copy -t image/png
    bindsym Ctrl+$mod+m exec grim -t png -g "$(slurp)" ~/screenshots/$(date +%Y-%m-%d_%H-%m-%s).jpg
    bindsym Ctrl+Shift+$mod+m exec grim -t png ~/screenshots/$(date +%Y-%m-%d_%H-%m-%s).jpg

    # Shortcut to force kill applicartion, useful when it is completely stuck
    bindsym $mod+Shift+k exec swaymsg -t get_tree | \
          jq '.. | select(.type?) | select(.focused==true).pid' | \
          xargs -L 1 kill -9

    exec swaymsg 'workspace 10_tools; exec gnome-system-monitor'
    exec swaymsg 'workspace 10_tools; exec pavucontrol'

    bindsym Ctrl+Shift+Escape exec gnome-system-monitor
    bindsym Ctrl+Shift+Alt+F2 exec nwggrid -f -p

    # Different borders
    for_window [class="Firefox"] border none

    # Quake like console
    bindsym Ctrl+Shift+Alt+F1 exec python3 /home/pc/os_config/scripts/quake_like_terminal.py
    for_window [app_id="terminal_scratchpad"] move scratchpad
    exec alacritty --class=terminal_scratchpad

    # Move windows around vim style in Colemak
    bindsym Ctrl+$mod+Right move workspace to output right
    bindsym Ctrl+$mod+Left move workspace to output left
    bindsym Ctrl+$mod+$right move workspace to output right
    bindsym Ctrl+$mod+$left move workspace to output left
    bindsym $mod+Alt+Right workspace next_on_output
    bindsym $mod+Alt+Left workspace prev_on_output
    bindsym $mod+Alt+$right workspace next_on_output
    bindsym $mod+Alt+$left workspace prev_on_output

    # Copy history manager
    exec wl-paste -t text --watch clipman store
    exec wl-paste -p -t text --watch clipman store -P --histpath="~/.local/share/clipman-primary.json"
    bindsym $mod+z exec clipman pick -t wofi

    # workspace 10_tools output $screen_left
    # workspace 2 output $screen_left
    workspace 1 output $screen_right

